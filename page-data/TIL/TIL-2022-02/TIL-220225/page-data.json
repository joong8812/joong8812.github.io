{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/TIL/TIL-2022-02/TIL-220225/",
    "result": {"data":{"cur":{"id":"88ee8909-bbe2-5272-a855-5f24913aef5f","html":"<h2 id=\"lazy-loading-구현\" style=\"position:relative;\"><a href=\"#lazy-loading-%EA%B5%AC%ED%98%84\" aria-label=\"lazy loading 구현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>lazy loading 구현</h2>\n<p>새로운 것을 알고 익히는 것은 너무나 신나는 일인 것 같다. 지난 프로젝트 때 많은 양의 이미지 로드가 있어서 해당 페이지가 상당히 늦게 열리는 문제가 있었다. 시간이 없고 해서 그대로 마무리를 했는데 역시 튜터님들의 개선이 필요하다는 피드백을 받게 되었고 그 때 <code class=\"language-text\">lazy loading</code>이라는 말을 듣게 되었다. 이번 프로젝트에도 많은 양의 이미지를 로드하는 부분이 있어서, 저 lazy loading이라는 것을 구현해서 이미지 로딩이 느리지 않게 하고 싶었다. 그래서 어떻게 구현하는 지 여러 블로그글을 보고 가장 기본적인 지식만을 가지고도 구현할 수 있는 방법으로 코드를 짰다. 여러 시행착오를 거쳐 우리 프로젝트에 맞는 코드로 잘 동작하게 했다. 시간이 되면 직전 프로젝트도 해당 기술을 써서 개선해보고 싶다. (그런데 그건 서버에서 응답해주는 시간이 느린거라 클라이언트-서버간 통신을 쪼개서 해야하나 라는 생각이 들긴한다.)</p>\n<h2 id=\"몰입\" style=\"position:relative;\"><a href=\"#%EB%AA%B0%EC%9E%85\" aria-label=\"몰입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>몰입</h2>\n<p>나는 프로젝트할 때는 프로젝트만 하는데, 어느 분이 취업을 위해서 알고리즘 문제 푸는것도 프로젝트 중에 틈틈히 알아서 해야한다라고 얘기하셔서 충격을 먹었다. 취업할 때 코딩테스트가 있으니 당연히 하긴 할건데 프로젝트 중이라 프로젝트에만 집중하는 게 맞다 생각한 내 머리를 흔든 발언이였다. (나는 프로젝트에만 집중에도 늘 시간이 부족하다 생각하는데…) 아무튼 그래서 오늘부터 다시 1문제씩 풀어야겠다 생각했는데, 다시 생각을 바꿨다. 정답은 만들어가는 자의 것 아닌가. 나는 스스로에게 만족을 줄만한 결과물(프로젝트)을 남기고 싶다. 그래서 지금은 프로젝트 열심히하고 끝나고 알고리즘도 열심히 하련다. <code class=\"language-text\">몰입</code> 한다!</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#lazy-loading-%EA%B5%AC%ED%98%84\">lazy loading 구현</a></li>\n<li><a href=\"#%EB%AA%B0%EC%9E%85\">몰입</a></li>\n</ul>\n</div>","excerpt":"lazy loading 구현 새로운 것을 알고 익히는 것은 너무나 신나는 일인 것 같다. 지난 프로젝트 때 많은 양의 이미지 로드가 있어서 해당 페이지가 상당히 늦게 열리는 문제가 있었다. 시간이 없고 해서 그대로 마무리를 했는데 역시 튜터님들의 개선이 필요하다는 피드백을 받게 되었고 그 때 이라는 말을 듣게 되었다. 이번 프로젝트에도 많은 양의 이미지를 로드하는 부분이 있어서, 저 lazy loading이라는 것을 구현해서 이미지 로딩이 느리지 않게 하고 싶었다. 그래서 어떻게 구현하는 지 여러 블로그글을 보고 가장 기본적인 지식만을 가지고도 구현할 수 있는 방법으로 코드를 짰다. 여러 시행착오를 거쳐 우리 프로젝트에 맞는 코드로 잘 동작하게 했다. 시간이 되면 직전 프로젝트도 해당 기술을 써서 개선해보고 싶다. (그런데 그건 서버에서 응답해주는 시간이 느린거라 클라이언트-서버간 통신을 쪼개서 해야하나 라는 생각이 들긴한다.) 몰입 나는 프로젝트할 때는 프로젝트만 하는데, 어느 …","frontmatter":{"date":"February 25, 2022","title":"Today I Learned - 220225","categories":"TIL","author":"코딩쿠니","emoji":"🧎🏻"},"fields":{"slug":"/TIL/TIL-2022-02/TIL-220225/"}},"next":{"id":"cb0c104b-6283-5008-85b1-d80796dc7bde","html":"<h2 id=\"사용자-경험이-좋고-재밌는-앱\" style=\"position:relative;\"><a href=\"#%EC%82%AC%EC%9A%A9%EC%9E%90-%EA%B2%BD%ED%97%98%EC%9D%B4-%EC%A2%8B%EA%B3%A0-%EC%9E%AC%EB%B0%8C%EB%8A%94-%EC%95%B1\" aria-label=\"사용자 경험이 좋고 재밌는 앱 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>사용자 경험이 좋고, 재밌는 앱</h2>\n<p>프론트는 어플리케이션 최앞단에 서서 사용자들을 제일 먼저 맞이하게 된다. 가독성이 좋아 정보 전달이 좋고, 큰 설명이 없어도 사용자가 바로 어플리케이션을 사용할 수 있다면 뛰어난 프론트가 아닌가 싶다. 더불어 유저가 사용하는 재미까지 있다면 금상첨화 아닌가. 내가 지향하는 프론트의 모습이다. 프론트 작업의 재미는 역시 인터렉티브에 있는 것 같다. 자바스크립트, css를 가지고 동적으로 뭔가를 보여주고, 변화를 주면 개발을 하는 나도 신기해서 계속 만져보게 된다. 저번 프로젝트 최종 피드백때 받았던 <code class=\"language-text\">lazy image loading</code>을 이제 구현해보려고 한다. 처음 접하는 기술이지만 많은 이미지 혹은 파일을 불러오는 요즘 웹앱에서는 꼭 알아야 하는 기술인 것 같다. 잘 배워서 우리 프로젝트에 잘 넣어보자!!</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EC%82%AC%EC%9A%A9%EC%9E%90-%EA%B2%BD%ED%97%98%EC%9D%B4-%EC%A2%8B%EA%B3%A0-%EC%9E%AC%EB%B0%8C%EB%8A%94-%EC%95%B1\">사용자 경험이 좋고, 재밌는 앱</a></li>\n</ul>\n</div>","frontmatter":{"date":"February 24, 2022","title":"Today I Learned - 220224","categories":"TIL","author":"코딩쿠니","emoji":"💁🏻"},"fields":{"slug":"/TIL/TIL-2022-02/TIL-220224/"}},"prev":{"id":"c1a2a286-2e64-57ec-868e-25cd9c2accc1","html":"<h2 id=\"the-four-fs-facts-feelings-fidings-futures\" style=\"position:relative;\"><a href=\"#the-four-fs-facts-feelings-fidings-futures\" aria-label=\"the four fs facts feelings fidings futures permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The four F’s (Facts, Feelings, Fidings, Futures)</h2>\n<h3 id=\"네번째-팀프로젝트-시작\" style=\"position:relative;\"><a href=\"#%EB%84%A4%EB%B2%88%EC%A7%B8-%ED%8C%80%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%8B%9C%EC%9E%91\" aria-label=\"네번째 팀프로젝트 시작 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>네번째 팀프로젝트 시작!</h3>\n<p>이번 프로젝트는 NST(Neural Style Transfer)를 이용한 유화 제작 서비스를 만드는 것이다. 모델 자체를 우리가 학습시켜 만들진 않지만 이미 만들어진 것을 활용하여 서비스를 만드는 것이다. 기발한 컨셉으로 진행했으면 좋았겠지만, 딱히 떠오르는 게 없었나보다. 우리 팀은 해당 기술 이용해서 흔히 알고 있는 <code class=\"language-text\">명작</code>에서 스타일을 뽑고 본인이 원하는 이미지를 합쳐 유저만의 유화를 가지게 되는 <code class=\"language-text\">FUN</code> 요소를 주는 서비스를 만들기로 했다. 이번 프로젝트에서 우리는 2개의 서버를 올려 서로 통신하는 것을 배우게 될 것이며, 어떻게 유저 친화적이고, fun한 UI/UX를 고민하고 구현하게 될 것 같다. 지금까지와 다르게 이번에는 자진해서 프론트를 맡고 싶다고 했다. 웹 어플리케이션에서 어느 한 부분 중요하지 않은 곳이 없지만 유저가 먼저 맞닿는 프론트의 맛을 제대로 보고 싶어서다. 재밌는 요소를 주기 위해 gif파일을 직접 만들고, 어떤 효과를 주는 등 고민과 시간을 많이 보냈는데 결과물이 괜찮을 지는 모르겠다. 늘 그랬듯이 계속 최선을 다해보자! 끝날때까지 아자!</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#the-four-fs-facts-feelings-fidings-futures\">The four F’s (Facts, Feelings, Fidings, Futures)</a></p>\n<ul>\n<li><a href=\"#%EB%84%A4%EB%B2%88%EC%A7%B8-%ED%8C%80%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%8B%9C%EC%9E%91\">네번째 팀프로젝트 시작!</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"February 26, 2022","title":"Week I Learned - 2202-week4","categories":"WIL","author":"코딩쿠니","emoji":"🧢"},"fields":{"slug":"/WIL/WIL-2022-02/WIL-2202-week4/"}},"site":{"siteMetadata":{"siteUrl":"https://joong8812.github.io","comments":{"utterances":{"repo":"joong8812/joong8812.github.io"}}}}},"pageContext":{"slug":"/TIL/TIL-2022-02/TIL-220225/","nextSlug":"/TIL/TIL-2022-02/TIL-220224/","prevSlug":"/WIL/WIL-2022-02/WIL-2202-week4/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}
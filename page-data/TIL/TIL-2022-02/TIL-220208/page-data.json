{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/TIL/TIL-2022-02/TIL-220208/",
    "result": {"data":{"cur":{"id":"3c7bcbf3-d597-5fa8-b143-33e85c632016","html":"<h2 id=\"머리가-멈췄다\" style=\"position:relative;\"><a href=\"#%EB%A8%B8%EB%A6%AC%EA%B0%80-%EB%A9%88%EC%B7%84%EB%8B%A4\" aria-label=\"머리가 멈췄다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>머리가 멈췄다!</h2>\n<p>언제가 마지막이었는지 기억도 안 난다. 오랜만에 아주 오랜만에 밤을 샜다. 전 날 오후부터 구현 해보고 싶은 기능이 있어 해 보다가 할 수 있겠다는 생각이 들어 잡고 계속 하다보니 다음날 아침이 되었다. 유저에게 영화를 추천해주면서 많은 영화 썸네일 이미지가 메인페이지에 배치가 되는데, 넷플릭스의 경우 각 해당 썸네일에 마우스를 가져다 놓으면 간단하게 영상 정보와 클립영상이 실행된다. 마우스오 오버로 보이는 div와 그러지 않을 때 div로 나누어 2개의 태그가 전환할때 css의 transition을 사용하게 매끄럽게 보이게 하였다. 그리고 영상클립은 네이버 TV와 네이버 영화 페이지에서 영상 url을 크롤링 하여 보여주는 방식으로 했다. 생각보다 구현이 이쁘게 잘 되었다. 잠을 못자서 중간중간에 머리가 멈춰서 아무것도 못한 적도 있었지만, 결과물을 보고 뿌듯했다. 발표만 하면 이제 끝이다! 프로젝트 중 배운 것들을 내것으로 잘 가져가도록 하자!</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EB%A8%B8%EB%A6%AC%EA%B0%80-%EB%A9%88%EC%B7%84%EB%8B%A4\">머리가 멈췄다!</a></li>\n</ul>\n</div>","excerpt":"머리가 멈췄다! 언제가 마지막이었는지 기억도 안 난다. 오랜만에 아주 오랜만에 밤을 샜다. 전 날 오후부터 구현 해보고 싶은 기능이 있어 해 보다가 할 수 있겠다는 생각이 들어 잡고 계속 하다보니 다음날 아침이 되었다. 유저에게 영화를 추천해주면서 많은 영화 썸네일 이미지가 메인페이지에 배치가 되는데, 넷플릭스의 경우 각 해당 썸네일에 마우스를 가져다 놓으면 간단하게 영상 정보와 클립영상이 실행된다. 마우스오 오버로 보이는 div와 그러지 않을 때 div로 나누어 2개의 태그가 전환할때 css의 transition을 사용하게 매끄럽게 보이게 하였다. 그리고 영상클립은 네이버 TV와 네이버 영화 페이지에서 영상 url을 크롤링 하여 보여주는 방식으로 했다. 생각보다 구현이 이쁘게 잘 되었다. 잠을 못자서 중간중간에 머리가 멈춰서 아무것도 못한 적도 있었지만, 결과물을 보고 뿌듯했다. 발표만 하면 이제 끝이다! 프로젝트 중 배운 것들을 내것으로 잘 가져가도록 하자! 머리가 멈췄다!","frontmatter":{"date":"February 08, 2022","title":"Today I Learned - 220208","categories":"TIL","author":"코딩쿠니","emoji":"👁"},"fields":{"slug":"/TIL/TIL-2022-02/TIL-220208/"}},"next":{"id":"7dd7d126-1d52-59e8-99f0-6072b240c517","html":"<h2 id=\"api-문서-작성\" style=\"position:relative;\"><a href=\"#api-%EB%AC%B8%EC%84%9C-%EC%9E%91%EC%84%B1\" aria-label=\"api 문서 작성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>API 문서 작성</h2>\n<p>잘 되어 있는 기술 문서를 보면 쉽게 해당 기술을 사용할 수 있게 도와준다. 그러한 도움을 많이 받아왔고, 지금도 받고 있는 사람으로써 잘 작성된 문서를 만들고 싶은 욕심이 있었다. 이번 프로젝트에서 담당한 것 중 영화추천과 검색에 관한 함수들을 만들었었는데, 이것들을 내가 구두로 설명하지 않아도 팀원들이 잘 사용하게 해주고 싶었다. 그래서 간단한 <a href=\"https://github.com/joneheart/3team_netflix_clonecoding_project/wiki/%EC%98%81%ED%99%94-%EA%B2%80%EC%83%89-%ED%95%A8%EC%88%98-API\"><code class=\"language-text\">API문서</code></a>를 작성해보았다. 기본적인 함수의 형태와 설명 그리고 예시를 들어 최대한 쉽게 사용 해 볼 수 있도록 했다. 이게 짜임새 있게 잘 작성했는 지, 나도 잘 모르겠다. 다만, 필요한 정보를 최대한 간결하게 전달하고자 했고 무엇보다 처음으로 API문서를 작성하게 되어 스스로도 뿌듯했다. 앞으로도 <code class=\"language-text\">정보를 잘 알리는 것</code>에 초점을 맞추어 문서 작성을 재밌게 잘 해야겠다.</p>\n<h2 id=\"네이버-동영상-임베딩\" style=\"position:relative;\"><a href=\"#%EB%84%A4%EC%9D%B4%EB%B2%84-%EB%8F%99%EC%98%81%EC%83%81-%EC%9E%84%EB%B2%A0%EB%94%A9\" aria-label=\"네이버 동영상 임베딩 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>네이버 동영상 임베딩</h2>\n<p>그래도 넷플릭스 클론인데 영상 스트리밍은 못하지만 짧은 영상이라도 우리 웹페이지에서 보여주고 싶었다. 처음에는 유튜브 영상을 임베딩 하는 자료들이 많이 있어 각 영화의 트레일러를 유튜브에서 하려고 했었다. 그런데 각 영화로 검색을 한다해서 규칙성있게 트레일러 영상 결과를 받을 수가 없어 네이버 영화에서 트레일러 영상 url을 가져오기로 했다. 각 영화마다 영상을 불러올 수 있는 url규칙을 찾고 그것에 맞춰 크롤링을 하여 db에 넣었다. 그리고 임의의 영상들을 iframe에 넣어 보였는데, 잘 나온다!!! 신기하다. 얼마 안 남은 기간 잘 마무리해서 괜찮은 결과물을 받고 싶다!!</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#api-%EB%AC%B8%EC%84%9C-%EC%9E%91%EC%84%B1\">API 문서 작성</a></li>\n<li><a href=\"#%EB%84%A4%EC%9D%B4%EB%B2%84-%EB%8F%99%EC%98%81%EC%83%81-%EC%9E%84%EB%B2%A0%EB%94%A9\">네이버 동영상 임베딩</a></li>\n</ul>\n</div>","frontmatter":{"date":"February 07, 2022","title":"Today I Learned - 220207","categories":"TIL","author":"코딩쿠니","emoji":"😲"},"fields":{"slug":"/TIL/TIL-2022-02/TIL-220207/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://joong8812.github.io","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/TIL/TIL-2022-02/TIL-220208/","nextSlug":"/TIL/TIL-2022-02/TIL-220207/","prevSlug":""}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}
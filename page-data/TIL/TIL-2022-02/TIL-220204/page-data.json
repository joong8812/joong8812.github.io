{
    "componentChunkName": "component---src-templates-blog-template-js",
    "path": "/TIL/TIL-2022-02/TIL-220204/",
    "result": {"data":{"cur":{"id":"b884c609-defa-544d-b3c9-67d9a70d889a","html":"<h2 id=\"db에-데이터-넣기\" style=\"position:relative;\"><a href=\"#db%EC%97%90-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%84%A3%EA%B8%B0\" aria-label=\"db에 데이터 넣기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DB에 데이터 넣기</h2>\n<p>크롤링으로 필요한 데이터는 어느 정도 모은 것 같다. 이제 이것을 DB에 넣고, 또 추천시스템을 위한 모델을 만들어야 한다. 영화정보를 가지고 페이지에 보여주는 작업을 하시는 분들이 있기 때문에, 데이터를 DB에 넣는 작업부터 했다. 영화정보를 DB에 넣을 때 진행이 매끄럽지 않았다. 제목과 고유코드가 같을 경우 제거하는 필터링을 한 번 거쳤음에도 고유코드가 중복되어 있는 영화들이 있었다. 그렇다. 애초에 필터할 때 제목&#x26;고유코드가 아니라 그냥 고유코드만 했으면 됐는데, 필터링을 잘못했다. (제목은 다르나 코드가 같은 영화들이 꽤 있었다.) 처음에 제목+고유코드로만 데이터셋을 만들고 그 데이터를 기반으로 평점정보, 영화 자세한 정보, 명대사 등의 데이터를 수집했는데, 중복되는 것이 발견될 때마다 나머지 데이터에서 제거해주는 작업도 같이했다. 그러다보니 시간을 소요했다. 처음에 데이터를 잘 수집했어야 했는데 하는 후회가 들었다. 줄거리가 csv파일에서 여러 줄을 차지하는 경우에 불러다가 데이터를 넣을 때 문제가 생기기도 했다. (한 줄씩 로드하여 영화정보를 디비에 넣도록 했었기 때문에..) 데이터를 사용하도록 가공하는 것도 손이 많이 가는 것을 느꼈다. <code class=\"language-text\">pymysql</code>이라는 패키지를 import하여 디비에 넣었는데, 명대사 정보는 또 잘 안 들어간다. 그래서 장고에서 모델을 불러 넣어보고 있는 중이다. 오늘은 디비에 데이터 잘 넣고, 내일은 추천시스템 모델을 한 번 만들어보자 으쌰!!</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#db%EC%97%90-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%84%A3%EA%B8%B0\">DB에 데이터 넣기</a></li>\n</ul>\n</div>","excerpt":"DB에 데이터 넣기 크롤링으로 필요한 데이터는 어느 정도 모은 것 같다. 이제 이것을 DB에 넣고, 또 추천시스템을 위한 모델을 만들어야 한다. 영화정보를 가지고 페이지에 보여주는 작업을 하시는 분들이 있기 때문에, 데이터를 DB에 넣는 작업부터 했다. 영화정보를 DB에 넣을 때 진행이 매끄럽지 않았다. 제목과 고유코드가 같을 경우 제거하는 필터링을 한 번 거쳤음에도 고유코드가 중복되어 있는 영화들이 있었다. 그렇다. 애초에 필터할 때 제목&고유코드가 아니라 그냥 고유코드만 했으면 됐는데, 필터링을 잘못했다. (제목은 다르나 코드가 같은 영화들이 꽤 있었다.) 처음에 제목+고유코드로만 데이터셋을 만들고 그 데이터를 기반으로 평점정보, 영화 자세한 정보, 명대사 등의 데이터를 수집했는데, 중복되는 것이 발견될 때마다 나머지 데이터에서 제거해주는 작업도 같이했다. 그러다보니 시간을 소요했다. 처음에 데이터를 잘 수집했어야 했는데 하는 후회가 들었다. 줄거리가 csv파일에서 여러 줄을 …","frontmatter":{"date":"February 03, 2022","title":"(TIL) DB에 데이터 넣기 - 생각","categories":"TIL","author":"최중재(aziel)","emoji":"🐈"},"fields":{"slug":"/TIL/TIL-2022-02/TIL-220204/"}},"next":{"id":"9ddf0054-2371-58b9-852a-49258b96167f","html":"<h2 id=\"데이터가-필요해\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0%EA%B0%80-%ED%95%84%EC%9A%94%ED%95%B4\" aria-label=\"데이터가 필요해 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터가 필요해</h2>\n<p>담당하기로 한 로그인 기능이 어느 정도 완성이 되어서, 오늘은 크롤링으로 데이터셋을 모으는 데에 대부분의 시간을 보냈다.(여전히 더 모아야 할 정보들이 있다..) 각 영화별로 500명 유저의 평점을 모으고, 또 각 영화의 포스터(이미지)를 모았다. 약 1700여개의 영화 데이터셋이다 보니, 평점 정보는 약 65만개가 되고, 이미지도 2기가 정도나 되었다. 많은 양의 데이터가 파이썬으로 쏙 뽑아오니 매번 할 때마다 신기하다. 추가적으로 영화 디테일한 정보(장르, 개봉일, 등급, 상영시간, 감독, 배우 등)를 크롤링 할 예정이다. 조금씩 크롤링 하는 실력이 늘고 있는 느낌이 든다. <code class=\"language-text\">Pandas</code>로 데이터를 더 잘 가지고 놀 수 있다면 더욱 좋을 것 같다. 포기하지 않고 계속하다보면 관련하여서도 자신감이 생기리라 믿는다. 설 연휴가 끝나고 오랜만에 팀원들과 다시 만나게 되어 좋았다. 혼자 할 때보다 팀원들과 함께 하는 것이 더 재밌는 것 같다. 내일은 팀장님 AWS가 잘 돼서 S3, RDS를 잘 이용했으면 좋겠다. 이번 프로젝트 일주일도 안 남았다. 화이팅하자!</p>\n<div class=\"table-of-contents\">\n<ul>\n<li><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0%EA%B0%80-%ED%95%84%EC%9A%94%ED%95%B4\">데이터가 필요해</a></li>\n</ul>\n</div>","frontmatter":{"date":"February 03, 2022","title":"(TIL) 데이터가 필요해 - 생각","categories":"TIL","author":"최중재(aziel)","emoji":"🐿"},"fields":{"slug":"/TIL/TIL-2022-02/TIL-220203/"}},"prev":{"id":"d89c0b70-10d2-5352-8e74-2e46ee9fbe8b","html":"<h2 id=\"the-four-fs-facts-feelings-fidings-futures\" style=\"position:relative;\"><a href=\"#the-four-fs-facts-feelings-fidings-futures\" aria-label=\"the four fs facts feelings fidings futures permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The four F’s (Facts, Feelings, Fidings, Futures)</h2>\n<h3 id=\"새로운-챌린지의-연속\" style=\"position:relative;\"><a href=\"#%EC%83%88%EB%A1%9C%EC%9A%B4-%EC%B1%8C%EB%A6%B0%EC%A7%80%EC%9D%98-%EC%97%B0%EC%86%8D\" aria-label=\"새로운 챌린지의 연속 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>새로운 챌린지의 연속</h3>\n<p>이번 프로젝트를 진행하면서 이전에 경험하지 못한 작업들을 많이 하게 되는 것 같다.</p>\n<h3 id=\"소셜-로그인-연동\" style=\"position:relative;\"><a href=\"#%EC%86%8C%EC%85%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EC%97%B0%EB%8F%99\" aria-label=\"소셜 로그인 연동 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>소셜 로그인 연동</h3>\n<p>우선은 <code class=\"language-text\">소셜로그인 연동</code> 이다. 하나 하나 API문서를 보면서 작성해볼까 라고 생각도 했지만, Django의 <code class=\"language-text\">allauth</code> 패키지를 사용하면 조금 더 쉽게 구현 되는 것 같아 그것을 통해 구현 해 보았다. 이 작업을 통해서 밑바닥부터 개발하는 능력도 필요하긴 하지만, 기존에 누군가 만들어 놓은 라이브러리를 잘 이용하여 개발하는 것도 꼭 필요한 능력인 것 같다. 그리고 그게 또 쉽지만은 않다. 내용을 잘 알고 있어야 내 입맛에 맞게 필요한 부분에 잘 가져다 쓸 수 있기 때문이다.</p>\n<h3 id=\"웹-크롤링\" style=\"position:relative;\"><a href=\"#%EC%9B%B9-%ED%81%AC%EB%A1%A4%EB%A7%81\" aria-label=\"웹 크롤링 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>웹 크롤링</h3>\n<p>이전에 웹페이지에서 필요한 정보만 크롤링 하는 게 궁금해서 한 두어번 정도 해봤던 것 같지만, 지금 진행하는 프로젝트에 필요한 데이터셋을 모으기 위해 며칠간 제대로 씨름해서 어떻게 필요한 데이터를 가져와야 하는지 더 잘 알게 된 것 같다. 크롤링한 정보를 <code class=\"language-text\">Pandas</code> dataframe에 넣어 csv파일로 저장하는 것도 배울 수 있는 좋은 시간이었다.</p>\n<h3 id=\"추천시스템-모델\" style=\"position:relative;\"><a href=\"#%EC%B6%94%EC%B2%9C%EC%8B%9C%EC%8A%A4%ED%85%9C-%EB%AA%A8%EB%8D%B8\" aria-label=\"추천시스템 모델 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>추천시스템 모델</h3>\n<p>유저가 선택한 선호 영화 데이터를 보고 그 유저가 좋아할만 영화들을 추천해주는 기술이 필요했다. 튜터님께 배운 것 중 <code class=\"language-text\">아이템 기반 협업 필터링</code> 과 <code class=\"language-text\">잠재요인 협업 필터링</code> 의 2가지 타입 추천 모델을 만들었다. 아이템 기반 협업 필터링 같은 경우에는 코사인 유사도 기법을 사용했는데, 가장 유사도가 높은 영화와의 관계 수치가 높게 나오지는 않아 조금 실망스러웠다. 잠재요인 협업 필터링의 경우 유저와 영화간 행렬데이터를 이용해 잠재요인을 찾고, 이것을 통하여 유저가 평가하지 않은 영화들의 평점을 예측하여 추천 해 준다. 데이터셋과 수학공식을 통해 유저가 좋아할만 것들을 추천해주다니, 신기했다. 그런데, 이론적으로는 더 공부가 필요할 것 같다. 정해진 기간 안에 완성을 해야 해서 완벽하게 이해를 못하고 있다. 공부하자 공부!!</p>\n<h3 id=\"총평\" style=\"position:relative;\"><a href=\"#%EC%B4%9D%ED%8F%89\" aria-label=\"총평 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>총평</h3>\n<p>개인적으로 많은 챌린지를 겪은 한 주인 것 같다. 스스로는 이런것들을 내가 해냈다니 라는 뿌듯함이 있지만, 객관적으로 내가 잘 했는지에 대한 평가는 어떨지 궁금하다. 미흡함이 많지 않을까 반성 해 본다. 누군가 피드백을 주시면 좋을 것 같다는 생각이 문득 든다. 이제 3일 뒤면 이번 프로젝트가 종료된다. 팀원들과 협력하여 잘 완성하고 싶다. 가즈아!</p>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#the-four-fs-facts-feelings-fidings-futures\">The four F’s (Facts, Feelings, Fidings, Futures)</a></p>\n<ul>\n<li><a href=\"#%EC%83%88%EB%A1%9C%EC%9A%B4-%EC%B1%8C%EB%A6%B0%EC%A7%80%EC%9D%98-%EC%97%B0%EC%86%8D\">새로운 챌린지의 연속</a></li>\n<li><a href=\"#%EC%86%8C%EC%85%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8-%EC%97%B0%EB%8F%99\">소셜 로그인 연동</a></li>\n<li><a href=\"#%EC%9B%B9-%ED%81%AC%EB%A1%A4%EB%A7%81\">웹 크롤링</a></li>\n<li><a href=\"#%EC%B6%94%EC%B2%9C%EC%8B%9C%EC%8A%A4%ED%85%9C-%EB%AA%A8%EB%8D%B8\">추천시스템 모델</a></li>\n<li><a href=\"#%EC%B4%9D%ED%8F%89\">총평</a></li>\n</ul>\n</li>\n</ul>\n</div>","frontmatter":{"date":"February 06, 2022","title":"(WIL) 새로운 챌린지의 연속 외 - 2202 week1","categories":"WIL","author":"최중재(aziel)","emoji":"🪁"},"fields":{"slug":"/WIL/WIL-2022-02/WIL-2202-week1/"}},"site":{"siteMetadata":{"siteUrl":"https://joong8812.github.io","comments":{"utterances":{"repo":"joong8812/joong8812.github.io"}}}}},"pageContext":{"slug":"/TIL/TIL-2022-02/TIL-220204/","nextSlug":"/TIL/TIL-2022-02/TIL-220203/","prevSlug":"/WIL/WIL-2022-02/WIL-2202-week1/"}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}
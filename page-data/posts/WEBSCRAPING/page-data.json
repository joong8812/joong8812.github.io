{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/WEBSCRAPING",
    "result": {"pageContext":{"currentCategory":"WEBSCRAPING","categories":["All","KPT","PROJECT","WIL","TIL","DOCKER","DB","DJANGO","PYTHON","BLOG","AI","REACT","WEBSCRAPING","GIT","CSS","FLASK","DS","ALGORITHM"],"edges":[{"node":{"id":"499b942f-b80a-5add-8b74-69f5a15b1bca","excerpt":"Job리스트 스크래핑 - 3 1. 로딩화면이 필요하다 검색어가 입력이 되면 최대로 검색되는 만큼 스크래핑을 한 다음 화면에 보여주게 되어 있다. 검색결과가 많은 경우 사용자의 입장에서는 멍하니 진행되고 있는 것 조차 모르는 채 기다려야만 했다. 이를 해결하기 위해 여러가지 방법이 떠올랐지만, 나는 우선 로딩화면을 보여주기로 결정했다. (한 번 구현 해보고 싶었다.) 우선 Loading.io에 가서 마음에 드는 무료 로딩 gif를 받았다. 2. 로딩화면 구현 kkamikoon님의 글을 보고 구현했습니다. 1️⃣  브라우저 화면의 높이와 너비를 구한다. 2️⃣  전체 화면을 음영처리 할 div 생성한다. 3️⃣  로딩이미지를 담을 div, img 태그 생성한다. 4️⃣  body에 전체 음영처리 div, 로딩이미지 div를 추가한다. 5️⃣  위치와 크기 등을 css로 꾸며주고 보여준다. 3. 검색결과 페이지에서 뒤로가면..? 위와 같이 구현하여 로딩이 끝난 후 검색페이지로 넘어가는 것 처럼 보인다. …","fields":{"slug":"/TIL/TIL-2022-01/TIL-220111/"},"frontmatter":{"categories":"TIL PYTHON WEBSCRAPING","title":"Job리스트 스크래핑 - 3","date":"January 11, 2022"}},"next":{"fields":{"slug":"/TIL/TIL-2022-01/TIL-220110/"}},"previous":{"fields":{"slug":"/TIL/TIL-2022-01/TIL-220112/"}}},{"node":{"id":"7fa6b9b6-12af-5b57-9f25-b652d413093c","excerpt":"Job리스트 스크래핑 - 2 1. csv 파일로 저장 csv 모듈을 import 한다 file 열기(파일명, 쓰기모드) 후 csv.writer에 매개변수로 넣어준다. writer로 첫번째 줄에 Title, Company, Location, Link 를 쓴다. (Table header) 헤더의 순서대로 값을 리스트화 하여 한줄 한줄 쓴다. 아래와 같이 csv 파일이 생성 된다.\n 2. csv 파일 다운로드  이러한 url로 요청이 오면 아래 export함수가 실행된다. (버튼 or a태그를 통해) Query string에서 얻은 값으로 저장되어 있는 job리스트를 불어 온다. (실제 디비는 아니고 스크래핑된 데이터가 검색어가 키값인 딕셔너리로 저장되어 있음) Query string값이 약속된 키값으로 받지 못하거나 디비에 해당 키값이 없을 경우 / (루트) url로 보낸다. 디비에 Query string 값이 있다면 해당 job리스트를 csv파일로 저장한다. 그 후 (Flask me…","fields":{"slug":"/TIL/TIL-2022-01/TIL-220110/"},"frontmatter":{"categories":"TIL PYTHON WEBSCRAPING","title":"Job리스트 스크래핑 - 2","date":"January 10, 2022"}},"next":{"fields":{"slug":"/TIL/TIL-2022-01/TIL-220109/"}},"previous":{"fields":{"slug":"/TIL/TIL-2022-01/TIL-220111/"}}},{"node":{"id":"1741b13a-cf99-5365-b060-d4f363223d22","excerpt":"1. 컨테스트 도전 과일예측 딥러닝 모델(기존 Perceptron 모델을 Transfer Learning(전이학습))을 학습시키는 데 굉장히 시간(약 8시간)이 오래 걸려 수업진도를 못나가던 찰나 팀원 중 한분이 관심있으면 요런 컨테스트 한 번 해 보라고 링크를 주셨다.\n\n해당 사이트에서 로 제공되는 웹스크래핑 강의를 듣고 채용리스트 사이트를 만드는 것이다. 스파르타에서 배운 웹스크래핑을 리마인드 할 겸 틈나는대로 컨테스트에 제출 할 사이트를 만들어 봐야겠다. 2. 작업환경 Replit.com 라는 곳이 있다. IDE가 웹브라우저에서 구동 된다고 생각하면 된다. 파이썬을 사용하려면 파이썬 설치 및 환경변수 설정 등을 해야하는데, 저 곳에선 이미 세팅이 다 되어 있다. 그냥 프로그래밍 언어만 선택하고 프로젝트를 생성하면 된다. 물론 나는 이미 파이썬 개발환경이 다 갖춰져 있지만 강의 실습에서 알려준  사용해보기로 했다. 3. indeed 스크래핑 일부러 그런건지는 모르겠지만 해당 강…","fields":{"slug":"/TIL/TIL-2022-01/TIL-220109/"},"frontmatter":{"categories":"TIL PYTHON WEBSCRAPING","title":"Job리스트 스크래핑 - 1","date":"January 09, 2022"}},"next":{"fields":{"slug":"/WIL/WIL-2022-01/WIL-2201-week1/"}},"previous":{"fields":{"slug":"/TIL/TIL-2022-01/TIL-220110/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}
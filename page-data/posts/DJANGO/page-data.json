{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/DJANGO",
    "result": {"pageContext":{"currentCategory":"DJANGO","categories":["All","TIL","DJANGO","KPT","PROJECT","WIL","PYTHON","WEBSCRAPING","AI","GIT","CSS","FLASK","BLOG","DS","ALGORITHM"],"edges":[{"node":{"id":"b7c25516-0067-560b-b681-035ba0abe3ce","excerpt":"장고(Django) Authentication 사용 해 보기 1. 세팅 (models.py, setting.py) Django프로젝트를 처음 만들면 admin 페이지가 이미 구축이 되어 제공되어 진다. 그래서 우리는 을 만든 후 로그인을 하면 해당 페이지를 이용할 수 있다. 여기서 ’ 을 만들 수 있다?’ 그렇다. 이미 DB에 유저를 생성할 수 있는 모델이 있다라는 것이다. 우리는 그 모델의 각 필드와 제약조건을 으로 그대로 가져와 새로운 유저 모델을 만들 수 있다. (패스워드 암호화에 대한 코드를 따로 작성할 필요도 없고, 로그인 인증도 쉽게 할 수 있다) 프로젝트명과 같은 이름의 앱 폴더 안에 있는  에 아래의 코드를 추가 해줘야 한다. 기본 인증과정(AUTH_USER_MODEL)을 user앱에 작성한 UserModel로 사용하겠다는 의미 입니다. (기본적으로 장고(Django)는 룰 사용자 관리 테이블로 지정해 놓음) 2. 활용하기 (views.py) 로그인 로 db에 id,…","fields":{"slug":"/TIL/TIL-2022-01/TIL-220120/"},"frontmatter":{"categories":"TIL DJANGO","title":"Today I Learned - 220120","date":"January 20, 2022"}},"next":{"fields":{"slug":"/TIL/TIL-2022-01/TIL-220119/"}},"previous":null},{"node":{"id":"d7d5d61a-dea7-5de4-a13b-e859dc81c095","excerpt":"장고(Django)는 뭘까? 🤔 는 파이썬 웹 프레임워크 중 하나다. 공식 홈페이지를 살펴보면 함축적으로 이를 잘 설명하고 있다. The web framework for perfectionists with deadlines. Django makes it easier to build better web apps more quickly and with less code. (발번역중🥲) 마감시간 완벽하게 지키는 이를 위한 웹 프레임워크. 는 더 적은 코드로 더 빠르고 좋은 웹 어플리케이션을 쉽게 만들어준다. 지금까지 사용했던 (경량 파이썬 웹 프레임워크)보다 더 많은 유틸(기능)들을 제공한다 ex) DB, 로그인, Admin, 패스워드 암호화 등. 그리고 대형 웹 프로젝트에 사용하기 적합하며, 커뮤니티와 문서가 다른 파이썬 웹프레임워크 보다는 잘 되어 있다. 장고(Django)는 MTV패턴을 사용한다 M (Model) 데이터베이스의 모델(ORM) 저장되고 사용되는 데이터의 형태 T (T…","fields":{"slug":"/TIL/TIL-2022-01/TIL-220119/"},"frontmatter":{"categories":"TIL DJANGO","title":"Today I Learned - 220119","date":"January 19, 2022"}},"next":{"fields":{"slug":"/TIL/TIL-2022-01/TIL-220118/"}},"previous":{"fields":{"slug":"/TIL/TIL-2022-01/TIL-220120/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}
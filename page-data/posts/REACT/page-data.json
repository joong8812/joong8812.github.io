{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/REACT",
    "result": {"pageContext":{"currentCategory":"REACT","categories":["All","TIL","REACT","WIL","NETWORK","KPT","PROJECT","DOCKER","DB","DJANGO","PYTHON","BLOG","AI","WEBSCRAPING","GIT","CSS","FLASK","DS","ALGORITHM"],"edges":[{"node":{"id":"0a0e5a25-af0a-56be-a88a-12d633ee7f7c","excerpt":"오늘 공부한 React 예제 코드 살펴보기 개요 React(리액트) 할 줄 아는 프론트엔드 개발자가 되고 싶어 요즘 Udemy에서 React - The Complete Guide (incl Hooks, React Router, Redux) 강의를 듣고 있다. 오늘 들은  관련 강의 중에 나온 App.js 예제 코드를 살펴보자. (설명은 주석으로) 예제코드 새로 배운 것 자바스크립트에 fetch를 이용하여 api서버에서 데이터를 가져올 수 있다. firebase를 통하여 아주 간단하게 api서버를 만든다(무료) 오늘 공부한 React 예제 코드 살펴보기 개요 예제코드 새로 배운 것","fields":{"slug":"/TIL/TIL-2022-05/TIL-220503/"},"frontmatter":{"categories":"TIL REACT","title":"(TIL) React - 예제 App.js 코드 살펴보기","date":"May 03, 2022"}},"next":{"fields":{"slug":"/WIL/WIL-2022-04/WIL-2204-week3/"}},"previous":null},{"node":{"id":"11b4f22c-26e9-5693-baf9-915c20d43215","excerpt":"오잉? 상태변화 할 때 값을 복사하고 한다? 위와 같이 라는 배열의 state를 변경할 때 직접 해당 배열의 값을 변경하는 것이 아니라 를 사용하여 배열을 복사하고, 값을 변경하고, state 변화를 해준다. 직접 객체변경 혹은 데이터 변경이 이루어져도 결과는 같지만 이 immutability(불변성)이 가진 장점이 강력하기 때문에 React에서도 권장한다. immutability 장점 1. 복잡한 특징을 단순하게 을 위에 과정을 통해 쉽게 할 수 있다. 이전 데이터를 재사용하기 용이하다 2. 변화 감지 객체가 직접 수정이 이루어지면 변화 감지를 위해서 이전 사본과 전체 객체 트리를 돌며 비교해야 한다. 반면 immutable 객체는 이전 객체와 다르면 변화 했다고 빠르게 판단할 수 있다. 3. 리렌더링 시기 결정 React에서 를 만드는데 도움을 주고, 성능을 최적화 할 수 있다. 직접적으로 값을 변경하면 매번 state변화와 함께 가상DOM에서 리렌더링이 발생하기 때문에 CPU…","fields":{"slug":"/TIL/TIL-2022-04/TIL-220415/"},"frontmatter":{"categories":"TIL REACT","title":"React immutability(불변성) 장점","date":"April 15, 2022"}},"next":{"fields":{"slug":"/TIL/TIL-2022-04/TIL-220414/"}},"previous":{"fields":{"slug":"/WIL/WIL-2022-04/WIL-2204-week2/"}}},{"node":{"id":"20afd781-61aa-508e-93b4-521ef991008e","excerpt":"리액트(React), 누구세요? 공식홈페이지의 정의를 보자. A JavaScript library for building user interfaces Declarative React makes it painless to create interactive UIs. Design simple views for each state in your application, and React will efficiently update and render just the right components when your data changes. Component-Based Build encapsulated components that manage their own state, then compose them to make complex UIs. Learn Once, Write Anywhere We don’t make assumptions about the rest of your technology …","fields":{"slug":"/React/what-is-react/"},"frontmatter":{"categories":"REACT","title":"리액트(React), 누구세요?","date":"January 24, 2022"}},"next":{"fields":{"slug":"/WIL/WIL-2022-01/WIL-2201-week3/"}},"previous":{"fields":{"slug":"/TIL/TIL-2022-01/TIL-220124/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}
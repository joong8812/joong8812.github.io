{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/TIL",
    "result": {"pageContext":{"currentCategory":"TIL","categories":["All","TIL","DJANGO","KPT","PROJECT","WIL","PYTHON","WEBSCRAPING","AI","GIT","CSS","FLASK","BLOG","DS","ALGORITHM"],"edges":[{"node":{"id":"b7c25516-0067-560b-b681-035ba0abe3ce","excerpt":"장고(Django) Authentication 사용 해 보기 1. 세팅 Django프로젝트를 처음 만들면 admin 페이지가 이미 구축이 되어 제공되어 진다. 그래서 우리는 을 만든 후 로그인을 하면 해당 페이지를 이용할 수 있다. 여기서 ’ 을 만들 수 있다?’ 그렇다. 이미 DB에 유저를 생성할 수 있는 모델이 있다라는 것이다. 우리는 그 모델의 각 필드와 제약조건을 으로 그대로 가져와 새로운 유저 모델을 만들 수 있다. (패스워드 암호화에 대한 코드를 따로 작성할 필요도 없고, 로그인 인증도 쉽게 할 수 있다) 프로젝트명과 같은 이름의 앱 폴더 안에 있는  에 아래의 코드를 추가 해줘야 한다. 기본 인증과정(AUTH_USER_MODEL)을 user앱에 작성한 UserModel로 사용하겠다는 의미 입니다. (기본적으로 장고(Django)는 룰 사용자 관리 테이블로 지정해 놓음) 2. 활용하기 로그인 로 db에 id,password값이 맞는 인증할 수 있다.\n으로 인증정보 생성한…","fields":{"slug":"/TIL/TIL-2022-01/TIL-220120/"},"frontmatter":{"categories":"TIL DJANGO","title":"Today I Learned - 220120","date":"January 20, 2022"}},"next":{"fields":{"slug":"/TIL/TIL-2022-01/TIL-220119/"}},"previous":null},{"node":{"id":"d7d5d61a-dea7-5de4-a13b-e859dc81c095","excerpt":"장고(Django)는 뭘까? 🤔 는 파이썬 웹 프레임워크 중 하나다. 공식 홈페이지를 살펴보면 함축적으로 이를 잘 설명하고 있다. The web framework for perfectionists with deadlines. Django makes it easier to build better web apps more quickly and with less code. (발번역중🥲) 마감시간 완벽하게 지키는 이를 위한 웹 프레임워크. 는 더 적은 코드로 더 빠르고 좋은 웹 어플리케이션을 쉽게 만들어준다. 지금까지 사용했던 (경량 파이썬 웹 프레임워크)보다 더 많은 유틸(기능)들을 제공한다 ex) DB, 로그인, Admin, 패스워드 암호화 등. 그리고 대형 웹 프로젝트에 사용하기 적합하며, 커뮤니티와 문서가 다른 파이썬 웹프레임워크 보다는 잘 되어 있다. 장고(Django)는 MTV패턴을 사용한다 M (Model) 데이터베이스의 모델(ORM) 저장되고 사용되는 데이터의 형태 T (T…","fields":{"slug":"/TIL/TIL-2022-01/TIL-220119/"},"frontmatter":{"categories":"TIL DJANGO","title":"Today I Learned - 220119","date":"January 19, 2022"}},"next":{"fields":{"slug":"/TIL/TIL-2022-01/TIL-220118/"}},"previous":{"fields":{"slug":"/TIL/TIL-2022-01/TIL-220120/"}}},{"node":{"id":"918384a6-23e3-51d2-a741-e4afa0c9d78f","excerpt":"하루를 돌아보며 … 어제 못 다한 댓글페이지 완성!! 내가 쓴 댓글 삭제 가능합니다 미리 조금 작성 해 놓았던 좋아요 기능을 완성했다. 머신러닝 강의를 들으면서 숙제로 만들어놓았던 숫자인식 모델(pixel을 학습한, 이미지 아님)이 있었다. 강의 중 테스트 데이터를 넣어 숫자인식을 잘하는지 확인하는 실습은 없었다. 튜터님이 가이드 해 주신 것도 이미지 인식 관련 된 것 밖에 없었다. 실습했던 코랩 내용 + 튜터님 가이드 + 각종 커뮤니티 글 + 공식문서 등을 통해 해결했다! 여러자료를 통해 해냈다는 기쁨을 누릴 수 있었다. 개발의 묘미? 코드 정리 및 내가 쓴 코드를 확실히 머릿속에 넣어야 겠다. 1차때 짰던 나의 코드에서 버그가 발견됐다. 그 당시에도 조금 이상했지만 잘 동작하여 그냥 넘겼는데, 결국 팀원분이 다른 작업을 하다가 문제가 있다는 걸 확인했다. 그래서 버그를 수정할 수 밖에 없었고, 수정했다. 문제를 보았을 때, 대충 넘기지말고 바로 잘 고치는 습관을 들이자. 시간이…","fields":{"slug":"/TIL/TIL-2022-01/TIL-220114/"},"frontmatter":{"categories":"TIL PROJECT","title":"Today I Learned - 220114","date":"January 14, 2022"}},"next":{"fields":{"slug":"/TIL/TIL-2022-01/TIL-220113/"}},"previous":{"fields":{"slug":"/WIL/WIL-2022-01/WIL-2201-week2/"}}},{"node":{"id":"cfa19499-3fc8-5ca4-8810-cea474464786","excerpt":"1. 거만 했다(?) 완전하게 한 것은 아니었지만, ‘좋아요’기능 구현과 회원가입 페이지에 넣을 Canvas(숫자 그리기)에서 서버에 이미지 파일로 저장하는 것까지 테스트를 하여 생각보다 많은 진척을 이루어냈다고 착각을 한 것 같다. 그래서 주말이 되기전에 어느정도 완성할 수 있겠구나 생각이 들었는데, 오늘 나에게 할당된 작업을 하면서 이 마음은 곧 사라지고 말았다. 나는 오늘 를 담당하게 되었다. 물론 프론트만 말이다. 그런데 이것이 생각만큼 쉽지가 않았다. 여러 포스트가 있는 메인페이지에서 특정 포스트에 대한 댓글페이지(댓글 div)를 모달로 띄우고 또 그 포스트의 내용과 달린 댓글들을 보여줘야 했다. 포스트를 생성할 때 필요한 데이터들을 자바스크립트에서 잘 받을 수 있게끔 작업이 되어 있지 않으면 해당 내용을 구현하기 어렵다 생각했다. (다른 더 쉬운 방법이 있다면 알려주세요..ㅠ-ㅠ) 그런데 더 쉽지 않은건 css 였다. 브라우저의 크기에 따라 계속 변하는 html요소들의 …","fields":{"slug":"/TIL/TIL-2022-01/TIL-220113/"},"frontmatter":{"categories":"TIL PROJECT","title":"Today I Learned - 220113","date":"January 13, 2022"}},"next":{"fields":{"slug":"/TIL/TIL-2022-01/TIL-220112/"}},"previous":{"fields":{"slug":"/TIL/TIL-2022-01/TIL-220114/"}}},{"node":{"id":"e9f68e9e-7947-5ec7-a872-e5f28b36c43a","excerpt":"1. 2차 팀프젝트 시작 이번 프로젝트는 지난 1주간 배운 머신러닝 기술을 녹여서 만들어야 한다. 아예 새로운 프로젝트에 다시 만들어도 되지만, 우리조는 1차 때 만든 에 배운 기술을 넣어 업그레이드 하기로 하였다. 1차와 다르게 멤버 1명이 빠졌지만, 이미 한 번 손발을 맞추어 봤기 때문에 진행이 수월하였다. 기존 프로젝트를 업그레이드 하는 방향으로 갔기 때문에 이전보다 상대적으로 쉽게 된 것 같기도 하다. 2. 어떻게 업그레이드? 우리는 우선 필수포함사항인 을 만들어 글을 쓸 때 이미지 파일이 선택되면 그 이미지가 어떤 음식인지 인식하고 자동으로 하는 기능을 넣기로 하였다. 그리고 가능하다면(지금 구현 관련 자료 검색중), 회원가입 할 때 임의의 숫자를 제시하고, 사용자가 그 숫자를 직접 마우스로 쓰면 그 이미지를 모델이 바르게 숫자로 인식하고 제시한 숫자와 같으면 이라 판단하고 회원가입을 가능케 하는 기능을 넣으려고 한다. 머신러닝 외 개선되는 부분은 댓글, 좋아요, 스크랩 …","fields":{"slug":"/TIL/TIL-2022-01/TIL-220112/"},"frontmatter":{"categories":"TIL PROJECT","title":"Today I Learned - 220112","date":"January 12, 2022"}},"next":{"fields":{"slug":"/TIL/TIL-2022-01/TIL-220111/"}},"previous":{"fields":{"slug":"/TIL/TIL-2022-01/TIL-220113/"}}},{"node":{"id":"499b942f-b80a-5add-8b74-69f5a15b1bca","excerpt":"Job리스트 스크래핑 - 3 1. 로딩화면이 필요하다 검색어가 입력이 되면 최대로 검색되는 만큼 스크래핑을 한 다음 화면에 보여주게 되어 있다. 검색결과가 많은 경우 사용자의 입장에서는 멍하니 진행되고 있는 것 조차 모르는 채 기다려야만 했다. 이를 해결하기 위해 여러가지 방법이 떠올랐지만, 나는 우선 로딩화면을 보여주기로 결정했다. (한 번 구현 해보고 싶었다.) 우선 Loading.io에 가서 마음에 드는 무료 로딩 gif를 받았다. 2. 로딩화면 구현 kkamikoon님의 글을 보고 구현했습니다. 1️⃣  브라우저 화면의 높이와 너비를 구한다. 2️⃣  전체 화면을 음영처리 할 div 생성한다. 3️⃣  로딩이미지를 담을 div, img 태그 생성한다. 4️⃣  body에 전체 음영처리 div, 로딩이미지 div를 추가한다. 5️⃣  위치와 크기 등을 css로 꾸며주고 보여준다. 3. 검색결과 페이지에서 뒤로가면..? 위와 같이 구현하여 로딩이 끝난 후 검색페이지로 넘어가는 것 처럼 보인다. …","fields":{"slug":"/TIL/TIL-2022-01/TIL-220111/"},"frontmatter":{"categories":"TIL PYTHON WEBSCRAPING","title":"Today I Learned - 220111","date":"January 11, 2022"}},"next":{"fields":{"slug":"/TIL/TIL-2022-01/TIL-220110/"}},"previous":{"fields":{"slug":"/TIL/TIL-2022-01/TIL-220112/"}}},{"node":{"id":"7fa6b9b6-12af-5b57-9f25-b652d413093c","excerpt":"Job리스트 스크래핑 - 2 1. csv 파일로 저장 csv 모듈을 import 한다 file 열기(파일명, 쓰기모드) 후 csv.writer에 매개변수로 넣어준다. writer로 첫번째 줄에 Title, Company, Location, Link 를 쓴다. (Table header) 헤더의 순서대로 값을 리스트화 하여 한줄 한줄 쓴다. 아래와 같이 csv 파일이 생성 된다.\n 2. csv 파일 다운로드  이러한 url로 요청이 오면 아래 export함수가 실행된다. (버튼 or a태그를 통해) Query string에서 얻은 값으로 저장되어 있는 job리스트를 불어 온다. (실제 디비는 아니고 스크래핑된 데이터가 검색어가 키값인 딕셔너리로 저장되어 있음) Query string값이 약속된 키값으로 받지 못하거나 디비에 해당 키값이 없을 경우 / (루트) url로 보낸다. 디비에 Query string 값이 있다면 해당 job리스트를 csv파일로 저장한다. 그 후 (Flask me…","fields":{"slug":"/TIL/TIL-2022-01/TIL-220110/"},"frontmatter":{"categories":"TIL PYTHON WEBSCRAPING","title":"Today I Learned - 220110","date":"January 10, 2022"}},"next":{"fields":{"slug":"/TIL/TIL-2022-01/TIL-220109/"}},"previous":{"fields":{"slug":"/TIL/TIL-2022-01/TIL-220111/"}}},{"node":{"id":"1741b13a-cf99-5365-b060-d4f363223d22","excerpt":"1. 컨테스트 도전 과일예측 딥러닝 모델(기존 Perceptron 모델을 Transfer Learning(전이학습))을 학습시키는 데 굉장히 시간(약 8시간)이 오래 걸려 수업진도를 못나가던 찰나 팀원 중 한분이 관심있으면 요런 컨테스트 한 번 해 보라고 링크를 주셨다.\n\n해당 사이트에서 로 제공되는 웹스크래핑 강의를 듣고 채용리스트 사이트를 만드는 것이다. 스파르타에서 배운 웹스크래핑을 리마인드 할 겸 틈나는대로 컨테스트에 제출 할 사이트를 만들어 봐야겠다. 2. 작업환경 Replit.com 라는 곳이 있다. IDE가 웹브라우저에서 구동 된다고 생각하면 된다. 파이썬을 사용하려면 파이썬 설치 및 환경변수 설정 등을 해야하는데, 저 곳에선 이미 세팅이 다 되어 있다. 그냥 프로그래밍 언어만 선택하고 프로젝트를 생성하면 된다. 물론 나는 이미 파이썬 개발환경이 다 갖춰져 있지만 강의 실습에서 알려준  사용해보기로 했다. 3. indeed 스크래핑 일부러 그런건지는 모르겠지만 해당 강…","fields":{"slug":"/TIL/TIL-2022-01/TIL-220109/"},"frontmatter":{"categories":"TIL PYTHON WEBSCRAPING","title":"Today I Learned - 220109","date":"January 09, 2022"}},"next":{"fields":{"slug":"/WIL/WIL-2022-01/WIL-2201-week1/"}},"previous":{"fields":{"slug":"/TIL/TIL-2022-01/TIL-220110/"}}},{"node":{"id":"2dd316dc-3883-51d3-aaa5-7395f2fe9a51","excerpt":"머신러닝 3주차 Homework ❓ 문제 손으로 쓴 0~9 숫자 이미지 데이터셋으로 딥러닝(Depp Laerning) 모델 구현하기 1. 필요한 데이터셋 다운 및 패키지 import 2. 트레이닝 & 검증 데이터셋 Dataframe 만들어주기 3. 트레이닝 데이터셋 Output 결과값(숫자별) 갯수 확인  4. 트레이닝 & 검증 데이터셋 입력값과 출력값 분리 5. 트레이닝셋의 데이터를 이미지로 출력 해보자 이거 너무 신기하다! 한 데이터씩 784개(28 x 28)의 픽셀 컬러값을 가지고 있다. 요걸 matplotlib 을 이용해 그려주면 위와 같이 숫자가 보인다. 즉, 숫자 이미지 -> 각 픽셀의 컬러 값으로 데이터화. 이미지를 데이터화 한 것도 또 그 데이터를 간단한 함수로 이미지를 볼수 있는 게 정말 신기하다.  6. 출력값(0~9)을 One-hot encoding 데이터로 변환 컴퓨터가 좋아하는 0과1로 이루어진 벡터로 데이터를 구별해준다. 0 -> [1, 0, 0, 0, 0…","fields":{"slug":"/TIL/TIL-2022-01/TIL-220107/"},"frontmatter":{"categories":"TIL AI","title":"Today I Learned - 220107","date":"January 07, 2022"}},"next":{"fields":{"slug":"/TIL/TIL-2022-01/TIL-220106/"}},"previous":{"fields":{"slug":"/WIL/WIL-2022-01/WIL-2201-week1/"}}},{"node":{"id":"73e0719f-f90c-5bb2-ae41-66429e5bc3f6","excerpt":"머신러닝 1주차 Homework ❓ 문제 연차-연봉 데이터셋으로 선형회귀(Linear regression) 모델 구현하기 ❗️ Hint Learning rate(lr)를 바꾸면서 실험 Optimizer를 바꾸면서 실험 손실함수(loss)를 mean_absolute_error로 바꿔서 실험 1. 나의 캐글 정보 세팅하기 나의 캐글 정보를 세팅을 해야 캐글에서 원하는 데이터셋을 다운 받을 수 있다. 2. Dataset 다운로드 원하는 데이터셋을 다운 받은 후 압축을 풀어준다. Colab에서 맨 앞에 를 붙여주면 리눅스 명령을 할 수 있다. 3. 필요한 라이브러리 import tensorflow & keras TensorFlow is an end-to-end open source platform for machine learning. Keras is a deep learning API written in Python, running on top of the machine learning …","fields":{"slug":"/TIL/TIL-2022-01/TIL-220106/"},"frontmatter":{"categories":"TIL AI","title":"Today I Learned - 220106","date":"January 06, 2022"}},"next":{"fields":{"slug":"/TIL/TIL-2022-01/TIL-220105/"}},"previous":{"fields":{"slug":"/TIL/TIL-2022-01/TIL-220107/"}}},{"node":{"id":"b85fadb4-fbd4-55ad-991d-b9ff7ac68113","excerpt":"1. 내가 정리한 Git 3주차 개념지도 PR, Amend, Revert : contributer가 자신의 작업(commit)을 PR 하면 프로젝트 관리자가 해당 commit을 main에 병합 할 지 말지를 결정한다. merge 요청. : 제일 최근에 했던 커밋의 메시지 수정이나 해당 커밋에 파일을 다시 추가 할 수 있다. : 선택한 과거의 시점으로 돌아간 후 그 상태를 다시 커밋한다. (히스토리가 계속 남아 있음)  Reset, Stash : 선택한 과거 시점 이후 작업(커밋)들을 삭제 한다. 선택한 시점이 Head가 된다. 삭제된 커밋들에 대한 히스토리가 남지 않는다. : 현재 작업중인 파일들(Uncommited) 상태를 저장한다. 브랜치 이동하여 작업, pull 을 하는 등의 행동을 하고 다시 불러올 수 있다.  추가내용 Amend, Revert, Reset 과 같은 기능은 자신의 branch에서만 하는 게 좋다고 한다. 왜냐하면 메인 branch에서 해당 작업을 하게 되면 …","fields":{"slug":"/TIL/TIL-2022-01/TIL-220105/"},"frontmatter":{"categories":"TIL GIT","title":"Today I Learned - 220105","date":"January 05, 2022"}},"next":{"fields":{"slug":"/TIL/TIL-2022-01/TIL-220104/"}},"previous":{"fields":{"slug":"/TIL/TIL-2022-01/TIL-220106/"}}},{"node":{"id":"e9ef3f6c-c9d1-567d-9f4f-953016ad4539","excerpt":"1. 부딪히며 배우다 보고 듣는 것은 그래도 쉬운 편이다. 내 안에 있는 것들을 밖으로 끄집어 내는 것과 비교하면 말이다. 지금 있는 것 없는 것 다 끄집어 내서 프로젝트를 진행 중이다. 중간 중간에 텀이 길게 쉰 적이 있긴 하지만 그래도 나름 계속 에 있었는데도 내게는 가진 경력에 비해 쌓인 노하우가 많지는 않은 것 같다는 생각이 좀 든다. 스스로 돌아볼 때도 그런 부족함을 느끼기에 이 과정에 있긴 하지만 말이다. 그래도 기대가 되는 부분은 내가 가진 열정과 노력이 이전과는 다르다고 생각하기 때문이다. 크고 작은 프로젝트 및 과제를 내주어 학습에 대한 긴장의 끈을 놓지 않게 하고, 계속 하게 만든다. 그리고 나도 모르는 사이에 실력이 늘거라고 생각한다. 앉아서 듣기만 하는 수업보다 이렇게 프로젝트를 통해 계속 부딪히며 배우는 이 방법이 나는 너무 좋다. 2. 팀원들의 성장을 돕다 서당개 삼년이면 풍월을 읊는다 처럼 그래도 나는 경험이 있는 편이라 개발에 이제 밟을 담근 지 얼마 …","fields":{"slug":"/TIL/TIL-2021-12/TIL-211231/"},"frontmatter":{"categories":"TIL PROJECT","title":"Today I Learned - 211231","date":"December 31, 2021"}},"next":{"fields":{"slug":"/TIL/TIL-2021-12/TIL-211230/"}},"previous":{"fields":{"slug":"/WIL/WIL-2021-12/WIL-2112-week5/"}}},{"node":{"id":"78fec854-cfcc-5d88-8a24-b4c8a1b5c46c","excerpt":"어제 보다 나은 오늘 너무 좋은 말이지 아니한가. 어제 보다 나은 오늘. 오늘이 딱 그러한 날인 것 같다. 어제 우리가 프로젝트 작업한 진행도를 보고 사실 조금 암울했는데, 다들 열심히 해서 오늘 프론트, 백엔드 다 껴 맞추니까 그래도 설계한대로 잘 동작한다. 물론 로그인, 회원가입 2페이지 밖에 되지 않지만 말이다. 오늘은 그래도 어제 와 다르게 페이지 하나 (글쓰기) 맡아서 앞, 뒤단 다 구현했다. 관리만 하는건 나의 너무 안일한 생각이였다. 협업을 하면서 가장 어렵게 느끼는 건 개개인의 실력이 다르다는 것도 있지만, 하나의 어플리케이션을 만드는데 한 명이 정성껏 여기저기 섬세하게 만든 것과 같이 만드는 게 쉽지 않다는 거다. 사실 백엔드 쪽은 눈에 보이는 부분은 아니다 보니 크게 걱정은 되지 않지만, 프론트는 얘기가 다르다. 처음부터 모든 페이지를 일관성있게 미리 디자인 하고 개발을 들어간게 아니여서, 지금 담당하신 분들의 각 페이지를 보면 그냥 다른 어플리케이션 같다. 그래…","fields":{"slug":"/TIL/TIL-2021-12/TIL-211230/"},"frontmatter":{"categories":"TIL PROJECT","title":"Today I Learned - 211230","date":"December 30, 2021"}},"next":{"fields":{"slug":"/TIL/TIL-2021-12/TIL-211229/"}},"previous":{"fields":{"slug":"/TIL/TIL-2021-12/TIL-211231/"}}},{"node":{"id":"adac4c64-d431-5659-874b-14b857b81648","excerpt":"1. 뭘 모르겠는데 일단 해보자 모든 프로젝트과정을 에 담아내고 싶었다. 그래서 한번 더 써보지 않은 라든지 , 등을 사용 해 보기로 했다. 우선 Wiki에는 우리가 구현 해야 할 기능 리스트를 담은 페이지, 프로젝트 진행 시 어려운 부분 팀 내에서 해결 못할 경우 튜터님께 묻는 질문 리스트 페이지, 그리고 commit 메시지 규칙도 간단히 올려보았다.  에는 대략 적인 큰 틀에서 우리가 해야할 것 들을 적고 하위로 조금은 더 세분화 된 (일감)를 등록했다. 나도 이렇게 하는 게 잘 모르겠지만, 최대한 Github이 제공하는 협업 툴로 이번 프로젝트를 진행 해 보고 싶어서 한 번 해보았다. 모두 Github에 익숙 해지면 좋겠다. 2. 내 역할 이렇게 하는 거 맞아? 우선 이번 프로젝트의 주 개발업무는 나 외에 나머지 4분에게 담당시켰다. 나는 팀장으로 개발과 협업을 할 수 있는 환경 세팅 위주로 하고, 팀원 분들이 잘 모르고 어려워하는 부분들을 알려주고 있다. 이렇게만 하는 건 …","fields":{"slug":"/TIL/TIL-2021-12/TIL-211229/"},"frontmatter":{"categories":"TIL PROJECT CSS FLASK","title":"Today I Learned - 211229","date":"December 29, 2021"}},"next":{"fields":{"slug":"/TIL/TIL-2021-12/TIL-211228/"}},"previous":{"fields":{"slug":"/TIL/TIL-2021-12/TIL-211230/"}}},{"node":{"id":"ae0459bc-7b2d-503f-af1c-4218c8060cfc","excerpt":"1. 대격변 지난 2주간 함께 했던  분들과 안녕을 하고 새로운  분들을 만나게 되었다. 서로 알아가기도 바쁜 첫 만남에서 우리는 바로 팀프로젝트 이야기를 하게 되었다.\n우리에게 주어진 시간은 ! 이 곳 스파르타코딩클럽 내배캠에 와서 처음 하는 팀프로젝트이다. 지금까지 배운 기술을 총 동원하여 인스타그램을 클론 코딩하는 것이다.\n이전과 다르게 백엔드(Flask, Mongo DB) + AWS + 도메인 연결 까지 다 해야 하는 프로젝트이다. 우리가 함께 만들어갈 것이 기대가 되면서도 잘 할 수 있을까 걱정도 된다. 2. 와이어프레임 이런 팀프로젝트는 당연히 역할을 나누어서 하는 게 맞다. 그래도 초기 기획단계에서는 어떻게 화면을 구성하고, 기능은 무엇을 넣을지 각 자 고민해보는 것도 필요하다는 생각을 했다.\n그래서 시간을 주고 각자 와이어프레임 작성도 해보고, 기능 및 API 설계도 해 보았다. 이 작업을 하면서 느낀 것은 우리가 가진 실력에 비해 우리가 너무나 큰 것을 만드려고 하…","fields":{"slug":"/TIL/TIL-2021-12/TIL-211228/"},"frontmatter":{"categories":"TIL PROJECT","title":"Today I Learned - 211228","date":"December 28, 2021"}},"next":{"fields":{"slug":"/TIL/TIL-2021-12/TIL-211227/"}},"previous":{"fields":{"slug":"/TIL/TIL-2021-12/TIL-211229/"}}},{"node":{"id":"a6f54830-b06d-5e70-928d-247bcdffb25f","excerpt":"핵심 쏙쏙 Git - 숙제 1. 앞으로 git 프로젝트로 만들고 싶은 것 아이디어가 넘치는 사람이 참 부럽다. 그 분이 개발자이든 아니든 말이다. 나는 크게 불편하게 느끼지 않고 적응하는편(?) 인가 보다. 늘 새롭게 뭐하고 싶은 거 얘기하자 하면, 머릿속에 들어 있는 게 없다. 아무튼, 프로젝트의 크기, 실현 가능성, 내 현재 가진 실력 등 다 배제하고 내가 만들어보고 싶었던 것을 얘기해보자면, 쉽게 입력하는 지출부(식료품 한정, 영수증 이용) 운동타이머 및 프로그램이 대신 써주는 운동 일지 과거의 오늘 나는 뭐 했을까? 관심있는 축구 구단 일정 및 라이브방송 알림 오픈마켓+중고마켓 통합 가격비교 지금 생각 나는 건 5가지 정도이다. 내가 관련해서 검색 해보지는 않았지만 아마 유사 프로그램이 꽤 있을 수도 있을 것 같다. 만약 내가 생각한 기능들을 다 포함한 앱이 없다면 한 번 만들어 보고 싶다. 나를 위해! ㅎㅎ 2. 1주차에서 배운 Git 주요 키워드 Git - 프로젝트의 변…","fields":{"slug":"/TIL/TIL-2021-12/TIL-211227/"},"frontmatter":{"categories":"TIL GIT","title":"Today I Learned - 211227","date":"December 27, 2021"}},"next":{"fields":{"slug":"/WIL/WIL-2021-12/WIL-2112-wee4/"}},"previous":{"fields":{"slug":"/TIL/TIL-2021-12/TIL-211228/"}}},{"node":{"id":"ea9d8dd0-f04f-59be-9094-9426995616ec","excerpt":"인스타그램 모바일 화면 만들기 1. 개요 어제에 이어 오늘도 소셜미디어 클론하기 이다. 더 많은 오브젝트들이 화면에 있어 시간이 꽤 걸렸다.(기한 내에 제출하기 위해 점심도 안 먹고 했다는 건 안 비밀..) 그리고 px를 사용하지 않고 상대적 크기 단위인 %, vh, vw, em, rem 등만 사용해서 레이아웃을 잡아야 했다. (나중에 안 사실이지만 모바일용 페이지라 max-width는 px로 고정해도 된다고 하셨다) 2. 구현 1️⃣ 우선 레이아웃을 잡았다. header, content, footer 로 잡았다. content 안에는 내용이 많아 더 쪼개야 했다. 2️⃣ header와 footer는 position:fixed로 고정을 했다. 안에 content 내용만 스크롤이 된다. 3️⃣ 예제 화면을 보고 수치를 계속 조정 해가면서 비슷하게 만들었다. 4️⃣ width 를 %로 잡아 브라우저 크기에 따라 화면도 같이 변화도록 했다. 5️⃣ 폰트는 구글폰트 ‘주아체’를 사용했다. 3. 코드 코드줄…","fields":{"slug":"/TIL/TIL-2021-12/TIL-211224/"},"frontmatter":{"categories":"TIL PROJECT","title":"Today I Learned - 211224","date":"December 24, 2021"}},"next":{"fields":{"slug":"/TIL/TIL-2021-12/TIL-211223/"}},"previous":{"fields":{"slug":"/WIL/WIL-2021-12/WIL-2112-wee4/"}}},{"node":{"id":"a9883f85-a228-53e7-90ac-af8a7b87b6f4","excerpt":"카카오톡 프로필 클론하기 1. 개요 대한민국에서 가장 많이 사용하는 메신저는 무엇일까? 나는  이라 생각한다. 친구 목록에서 친구들을 누르면 를 볼 수가 있다. 오늘은 그 페이지를 html과 css를 가지고 그대로 구현 해 보는 시간을 가졌다. 2. 구현 1️⃣ 처음 클론 하라는 이미지를 보았을 때 크게 세 부분으로 나누어야겠다 생각했다. 상단부(상태글), 중간부(프로필사진 및 이름), 하단부(3개의 버튼) 이렇게 말이다. 2️⃣ 1번에서 언급한 세 div를 한 div에 담아 display:flex로 세로로 정렬 시켰다. 그 중 중간부(프로필 사진 및 이름) 부분은 위,아래 사이에 겹쳐서 있어야 했기에, position:absolute를 사용했다. 3️⃣ 상단부 작은 회색 선(물체)은 button으로 구현했다. (튜터님을 통해 hr태그 있다는 걸 나중에 알았다.) 4️⃣ 하단부 버튼 3개 역시 display:flex로 가로로 정렬 5️⃣ (추가조건) em, rem, % 등 상대적 수치는 사용 불가,…","fields":{"slug":"/TIL/TIL-2021-12/TIL-211223/"},"frontmatter":{"categories":"TIL PROJECT","title":"Today I Learned - 211223","date":"December 23, 2021"}},"next":{"fields":{"slug":"/TIL/TIL-2021-12/TIL-211222/"}},"previous":{"fields":{"slug":"/TIL/TIL-2021-12/TIL-211224/"}}},{"node":{"id":"1dacaab3-f99e-5494-b1c9-8476d52d8418","excerpt":"턴제 RPG 게임 만들기 1. 개요 드디어! 어릴 적 부터 좋아했던 이다. 물론 내가 지금까지 해 온 것과 비교해서는 초라한 것이지만, 어떻게 몬스터와 전투를 하는 지 내가 직접 개발을 하며 들여다 볼 수가 있다. 이번 프로젝트에 주요 키는 를 사용하는 것이다. 사용자와 몬스터간 1:3 대결이고, 사용자는 자신의 턴에 일반 공격과 마법공격 2가지 행동을 할 수가 있고, 몬스터는 회복, 대기, 공격 3가지 행동을 할 수 있다. 턴제 방식으로 전투가 진행되며 사용자가 먼저 행동 할 수 있다. 모든 몬스터의 체력이 0 이면  반대의 경우  이다. 2. 로직 1️⃣ 먼저 이름, 체력, 공격력을 멤버변수로, 상대방 공격 하는 함수를 멤버함수로 갖는 부모 클래스 Object를 만든다. 참, 현재 자신의 체력을 보여주는 클래스 내장함수 도 써보았다. 2️⃣ Object클래스를 상속받고 마법 공격을 하는 멤버 함수를 갖는 Player클래스, 마찬가지로 Object를 부모로 상속받고 대기, 회복을 멤버 …","fields":{"slug":"/TIL/TIL-2021-12/TIL-211222/"},"frontmatter":{"categories":"TIL PROJECT","title":"Today I Learned - 211222","date":"December 22, 2021"}},"next":{"fields":{"slug":"/TIL/TIL-2021-12/TIL-211221/"}},"previous":{"fields":{"slug":"/TIL/TIL-2021-12/TIL-211223/"}}},{"node":{"id":"d394df3b-c39c-50d0-8efa-5622469fe89c","excerpt":"베스킨라빈스 31 게임 만들기 1. 개요 “베스킨~ 라빈스~ 31!“. 좀 놀아보았다 하신 분들은 모를 수가 없는 게임. 각 게임 플레이어가 차례로 1~3 중의 수를 외쳐서 계속 수를 더하고, 마지막 31을 외치는 플레이어가 지는 게임이다. 컴퓨터와 사용자가 1:1 대결을 한다. 2. 로직 1️⃣ Random.randrange() 를 사용하여 누가 먼저 시작할지 정한다. 2️⃣ 컴퓨터가 말하는 함수를 만든다. 컴퓨터는 random 함수를 이용하여 1과 3 사이를 말하게 한다. 현재 숫자가 어떻게 변화 되고 있는 지는 한 변수를 정하여 누적하여 값을 더하며 확인한다. 3️⃣ 사용자가 말하는 함수를 만든다. 사용자의 숫자는 input()을 이용하여 받는다. 입력 예외처리 해준다. (1~3외에 값을 받지 못하게 한다) 4️⃣ 사용자 친화적으로 게임 진행상황을 출력해주는 함수를 만든다. 5️⃣ 누군가 31을 말하게 되면 상대방이 승리 했음을 알린다. 3. 코드 베스킨라빈스 31 인공지능 만들기 1. 개요 …","fields":{"slug":"/TIL/TIL-2021-12/TIL-211221/"},"frontmatter":{"categories":"TIL PROJECT","title":"Today I Learned - 211221","date":"December 21, 2021"}},"next":{"fields":{"slug":"/TIL/TIL-2021-12/TIL-211220/"}},"previous":{"fields":{"slug":"/TIL/TIL-2021-12/TIL-211222/"}}},{"node":{"id":"bb79768f-13dc-573b-be39-05e383ae348c","excerpt":"업다운 게임 만들기 1. 개요 오늘부터 매일 개인프로젝트를 과제를 준다고 한다. 오늘은 으로  만들기 이다. 컴퓨터가 1~100 범위에서 랜덤으로 정한 수를 맞추면 된다. 기회는 총 5번이 있고, 만약 컴퓨터가 정한 수 보다 낮게 추측할 경우 , 그 반대의 경우  이라고 힌트를 출력 해줘야 한다. 2. 로직 1️⃣ random.randrange 함수를 사용하여 1~100 사이 랜덤 수를 생성 2️⃣ input()으로 사용자 추측 숫자를 입력 받는다. 3️⃣ 5번 안에 랜덤으로 생성 된 수와 사용자가 추측한 숫자가 맞다면 “성공”을 출력한다. 그렇지 못할 경우 “실패”를 출력한다. 4️⃣ 예외처리) 정수외 입력 값(소수, 문자열 등)을 받을 경우 다시 입력 값을 받게 한다. 3. 코드 업다운 인공지능 만들기 1. 개요 이번에는 컴퓨터가 사용자가 입력한 값을 맞출 차례이다. 몇 개의 차이점을 빼고는 모든 것은 위에 프로그램과 동일하다. 그 차이점이란 컴퓨터는 random 함수를 이용하여 답을 추측할…","fields":{"slug":"/TIL/TIL-2021-12/TIL-211220/"},"frontmatter":{"categories":"TIL PROJECT","title":"Today I Learned - 211220","date":"December 20, 2021"}},"next":{"fields":{"slug":"/TIL/TIL-2021-12/TIL-211219/"}},"previous":{"fields":{"slug":"/TIL/TIL-2021-12/TIL-211221/"}}},{"node":{"id":"a9f4308f-aca8-5f75-b811-0c5bf86a8318","excerpt":"1. 나도 나의 블로그를 갖고 싶다. 😊 많은 개발자들이 자신의 블로그를 운영하며 많은 지식을 공유하기도 하고, 자신의 성장과 기술을 표현하기도 한다. 나에게도 그런 창구가 필요했다. 전부라고 말할 수는 없지만 크게 Tistory, Medium, Velog, Github 그리고 블로그를 직접 만들어 운영하는 것 같다. 나는 조금 욕심(?)이 있어 직접 블로그를 만들어 운영하고 싶었다. 여러 정보를 찾던 중 님을 만났다. Github+Gatsby+zoomkoding템플릿 조합으로 나만의 블로그를 만들 수 있음을 알게 되었다. 2. 그래서 어떻게 만들죠? 🙄 위에서 언급했던 님이 가이드 작성을 정말 잘해주셔서, 그저 따라하기만 하면 된다. 그는 그저 이다. 3. 무슨 원리인가요? 🤔 우선 Github에  repository를 만든다. 이와 같이 만들게 되면 Github Pages를 이용할 수 있게 된다.(Github이 제공하는 무료 정적 페이지 호스팅!) 해당 repository에 님…","fields":{"slug":"/TIL/TIL-2021-12/TIL-211219/"},"frontmatter":{"categories":"TIL BLOG","title":"Today I Learned - 211219","date":"December 19, 2021"}},"next":{"fields":{"slug":"/WIL/WIL-2021-12/WIL-2112-week3/"}},"previous":{"fields":{"slug":"/TIL/TIL-2021-12/TIL-211220/"}}},{"node":{"id":"180103e8-fc7f-5465-8746-fbbe6bdaeefa","excerpt":"Linked List(링크드 리스트, 연결리스트)🚂 In computer science, a linked list is a linear collection of data elements whose order is not given by their physical placement in memory. Instead, each element points to the next. It is a data structure consisting of a collection of nodes which together represent a sequence. 참조: https://en.wikipedia.org/wiki/Linked_list (발번역중🥲) 컴퓨터 공학에서, 링크드 리스트는 데이터 요소들의 선형적 집합이고, 그 순서는 메모리 배치에 따라 정해지는 것이 아니다. 대신에 각 요소는 다음 요소를 가리키고 있다. 이것은 순차적으로 표현 된 노드들 집합으로 이루어진 자료 구조다. 화물 열차를 생…","fields":{"slug":"/TIL/TIL-2021-12/TIL-211217/"},"frontmatter":{"categories":"TIL DS","title":"Today I Learned - 211217","date":"December 17, 2021"}},"next":{"fields":{"slug":"/TIL/TIL-2021-12/TIL-211216/"}},"previous":{"fields":{"slug":"/WIL/WIL-2021-12/WIL-2112-week3/"}}},{"node":{"id":"8fcf6ed4-d32a-5eb4-b16a-9ae14664030b","excerpt":"Part1. 삼각형 회전 (너무어렵다😭😭😭) 아래와 같은 삼각형을 보자 (시계방향을 돌린다고 생각) 한 번만 시계방향으로 돌린 경우 입력: , 출력:  어떤 로직을 거쳐 위와 같은 출력이 나올 수 있을까? (0,0) ~ (5,5) 좌표평면으로 나타내서 돌린 다음 각 수의 위치와 이전 수와의 관계성을 찾으면 풀 수 있지 않을까? 고민 해 보았지만 풀지 못했다. 입/출력을 보고 리스트에 한 개씩 값을 변경 해보자 (한 팀원 분이 해결해주셨다🙂) 각 인덱스의 첫번째 문자만 보면 아래와 같은 규칙을 찾을 수 있었다. 첫번째 문자의 이동 위치(index) = length - 1 - (입력 리스트에서 현재 이동하고자 하는 문자의 index) 그런데 그 다음 문자 부터 재밌다. 각 index에서 처음 문자의 다음 2개의 문자는 그 처음문자 index(변경된)+1 로 위치가 변경 된다. 그 다음 2개의 문자는 처음문자 index(변경된)+2 ex) 5 (2->0), 67 (2->1), 89 (2…","fields":{"slug":"/TIL/TIL-2021-12/TIL-211216/"},"frontmatter":{"categories":"TIL ALGORITHM","title":"Today I Learned - 211216","date":"December 16, 2021"}},"next":{"fields":{"slug":"/TIL/TIL-2021-12/TIL-211215/"}},"previous":{"fields":{"slug":"/TIL/TIL-2021-12/TIL-211217/"}}},{"node":{"id":"224d3ef7-0e6e-527f-8347-a3dfcb0db3d5","excerpt":"Part 1. 새로운 연산자(Feat. 바다코끼리🦭)  문제 보고 입력의 끝을 어떻게 알 수 있지? 하고 멘붕. 문제 클릭 전  라는 힌트를 봄  stands for . This is the point in the program where the user cannot read the data anymore. 참조: https://www.delftstack.com/howto/python/python-end-of-file/ 는 더 이상 데이터를 읽은 수 없는 파일의 끝이라는 의미이다. 사용자 입력을 문제에 맞게 출력 해주다가 만나면 종료시켜주면 되는 문제다. 풀이1 풀이2 처음에 풀 때 아무 생각 없이 위와 같이 풀어 제출했는데,  EOFError라는 결과를 받게 되었다. 거기서 try ~ except 구문으로 해결해보면 어떨까 에서 착안함. 풀이3 - Walrus Operator 사용 (Python 3.8 이상) 위에 관련 글 보다가 알게 된 연산자를 이용해보았다. Python 3.…","fields":{"slug":"/TIL/TIL-2021-12/TIL-211215/"},"frontmatter":{"categories":"TIL ALGORITHM PYTHON","title":"Today I Learned - 211215","date":"December 15, 2021"}},"next":{"fields":{"slug":"/TIL/TIL-2021-12/TIL-211214/"}},"previous":{"fields":{"slug":"/TIL/TIL-2021-12/TIL-211216/"}}},{"node":{"id":"1b8754a8-a351-5c64-a4db-cfd18249ab48","excerpt":"Part 1. Python 한 줄 코딩 하기 한줄 if 문 한 줄 for문 filter - list의 모든 원소 중 특별한 것만 뽑기 *args 매개변수 매개변수명 변경가능, 여러 매개 변수 list에 담기 **kwargs 매개변수 매개변수명 변경가능, 여러 매개 변수 dict에 담기 Part 2. 이렇게 접근 하는 거였어? 🙄 (Feat. 알고리즘 문제) 알고리즘 강의를 듣다 아래와 같은 문제를 만났다. 문제를 처음 보았는 때 내 머릿속 사고 모든 수를 곱셈으로 연산하면 가장 큰 수 나오는 거 아닌가? 0을 보며 ‘그렇게는 쉽게 안 되겠네’ 라고 깨달음 그렇다면 모든 경우의 수를 비교 하여 구해야 되나? ($2^6$번..?) 저렇게 많은 연산을 하려면 어떻게..? (for문 덕지덕지? 재귀함수?) 모르겠다. 정답을 보고 난 후 모든 수를 곱할 때가 가장 큰 수가 나오는 것은 맞다. 그런데, 0과 1을 곱할 때 문제가 생긴다. 위와 같은 경우는 더 해주고 나머지 수에 대해서 곱해주…","fields":{"slug":"/TIL/TIL-2021-12/TIL-211214/"},"frontmatter":{"categories":"TIL ALGORITHM PYTHON","title":"Today I Learned - 211214","date":"December 14, 2021"}},"next":{"fields":{"slug":"/TIL/TIL-2021-12/TIL-211213/"}},"previous":{"fields":{"slug":"/TIL/TIL-2021-12/TIL-211215/"}}},{"node":{"id":"d83f5966-3bd8-5e2a-a34a-9ad463a91d66","excerpt":"다짐 스파르타 코딩클럽 AI 웹개발 교육 시작과 함께 오늘부터 TIL을 실천 하겠습니다. [Python] map 띄어쓰기로 구분하여 2개의 입력 값을 받는 알고리즘 문제를 보았다.\n아래와 같은 방법으로 입력값을 받을 수 있음을 알았다. 그런데 저기서 은 무엇이더냐? map(함수, 반복적인) 리스트, 튜플과 같은 반복자의 모든 값들을 map의 첫번째 인자 함수에 적용 후 반복자를 리턴 해준다. map(function, iterable, …) Return an iterator that applies function to every item of iterable, yielding the results. [참조] https://docs.python.org/3/library/functions.html#map 예를 들어 이 경우, 리스트의 담긴 각 문자열 값이 안에서 int 내장함수를 거치면서 정수형을 담은 리스트가 되었다. iterable한 자료형의 각 값을 특정 함수에 거쳐 새로운 ite…","fields":{"slug":"/TIL/TIL-2021-12/TIL-211213/"},"frontmatter":{"categories":"TIL PYTHON","title":"Today I Learned - 211213","date":"December 13, 2021"}},"next":null,"previous":{"fields":{"slug":"/TIL/TIL-2021-12/TIL-211214/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}